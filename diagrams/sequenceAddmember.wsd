@startuml sequenceDiagramViewMember
!define DARKBLUE
!includeurl https://raw.githubusercontent.com/Drakemor/RedDress-PlantUML/master/style.puml
actor User
User <- MenuView : getInputAction()
activate MenuView
User --> MenuView : input
MenuView -> EditMemberView : register()
deactivate MenuView
activate EditMemberView
EditMemberView -> EditMemberView : clearConsole()
EditMemberView -> User : requireInput()
User --> EditMemberView : answer
alt answer == "r"
EditMemberView --> MenuView 
activate MenuView
MenuView --> User : "invalid input"
MenuView -> MenuView : onViewInit()
MenuView -> MenuView : welcomeMessage()
MenuView -> MenuView : presentActions(presentActions)
MenuView -> User : getInputAction()
deactivate MenuView
end
EditMemberView -> Member : setName(answer)
activate Member
EditMemberView -> User : requireInput()
User --> EditMemberView : answer
EditMemberView -> Member : setPersonalNumber(answer)
deactivate Member
EditMemberView -> EditMemberView : isMemberCreated(member)
EditMemberView -> RegisterController : onMemberCreated(member)
deactivate EditMemberView
activate RegisterController
RegisterController -> RegisterController : setMember(member)
RegisterController -> RegisterController : saveBoatClubMember(currentMember)
RegisterController -> BaseController : addToRegistry(currentMemberState)
deactivate RegisterController
activate BaseController
BaseController -> BoatClubMemberRegistry : contains(currentMember)

alt contains(currentMember) == true
activate BoatClubMemberRegistry
BaseController -> BoatClubMemberRegistry : update(boatClubmember)
BaseController -> BoatClubMemberRegistry : indexOf(boatClubMember)
BoatClubMemberRegistry --> BaseController : index
BaseController -> BoatClubMemberRegistry : set(index, boatClubMember)
deactivate BoatClubMemberRegistry
else contains(currentMember) == false


BaseController -> BoatClubMemberRegistry : add(currentMember)

loop while hasMemberById(currentMember.id)

activate BoatClubMemberRegistry

BoatClubMemberRegistry -> BoatClubMember : getMember()
activate BoatClubMember
BoatClubMember --> BoatClubMemberRegistry : member
BoatClubMemberRegistry -> BoatClubMember : setId() 
deactivate BoatClubMember


else 
end
BoatClubMemberRegistry -> BoatClubMemberRegistry : add(currentMember)
end
deactivate BoatClubMemberRegistry

BaseController -> BaseController : writeToDB(gsonObj)
BaseController -> Gson : toJson(boatClubMemberRegistry)
activate Gson
Gson --> BaseController : formatted
deactivate Gson
database Database
BaseController -> Database : writeString(dbFile, formatted)
activate Database
deactivate Database
BaseController --> RegisterController 
deactivate BaseController
activate RegisterController
RegisterController --> EditMemberView : onMemberCreated = true
deactivate RegisterController
activate EditMemberView
EditMemberView --> User : "Member created"
deactivate EditMemberView
@enduml